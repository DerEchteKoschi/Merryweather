name: deployment
run-name: Deploy to ${{ vars.WEB_HOST }} by @${{ github.actor }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: prepare
        run: sudo apt install lftp
      - name: generate deployment key
        id: generate_number
        run: echo "random_number=$(($RANDOM))" >> $GITHUB_OUTPUT
      - name: checkout
        uses: actions/checkout@v3
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d_%T')" >> $GITHUB_OUTPUT
      - name: prepare .env
        run: |
          echo APP_ENV=prod >> .env
          echo APP_DEBUG=false >> .env
          echo APP_SECRET=${{ secrets.APP }} >> .env
          echo DATABASE_URL="mysql://${{ vars.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ vars.DB_HOST }}:3306/${{ vars.DB_NAME }}?serverVersion=mariadb-10.8.3&charset=utf8mb4" >> .env
          echo APP_VERSION=$RELEASE_NAME >> .env
        env:
          RELEASE_NAME: ${{ github.ref_name }}-${{ steps.date.outputs.date }}
      - run: cat .env
      - name: run composer
        uses: php-actions/composer@v6
      - name: dump-env
        uses: php-actions/composer@v6
        with:
          command: symfony:dump-env prod
      - run: echo '<?php return "${{ steps.generate_number.outputs.random_number }}"; ' > ./public/ci.php
      - name: prepare files to deploy
        run: |
          mkdir deploy
          mv bin deploy/
          mv config deploy/
          mv migrations deploy/
          mv public deploy/
          mv src deploy/
          mv templates deploy/
          mv translations deploy/
          sudo mv var deploy/
          sudo mv vendor deploy/
          mv .env.local.php deploy/
          mv composer.* deploy/
          mv symfony.lock deploy/
          mv deploy/public/index.php index.php_bak
          mv deploy/public/maintenance.html deploy/public/index.php
      - name: activate maintenance info
        run: lftp -e "put deploy/public/index.php /public/index.php; exit" -u ${{ vars.DEPLOYMENT_USER }},${{ secrets.DEPLOYMENT_PASSWORD }} ${{ vars.DEPLOYMENT_HOST }}
      - name: copy files to target
        run: cd deploy;lftp -e "mirror -R --parallel=30 -n --delete -x var/log/ . test/; exit" -u ${{ vars.DEPLOYMENT_USER }},${{ secrets.DEPLOYMENT_PASSWORD }} ${{ vars.DEPLOYMENT_HOST }}
      - name: deactivate maintenance info
        run: lftp -e "put index.php_bak /public/index.php; exit" -u ${{ vars.DEPLOYMENT_USER }},${{ secrets.DEPLOYMENT_PASSWORD }} ${{ vars.DEPLOYMENT_HOST }}
      - name: execute migrations
        run: curl --fail-with-body https://deployment:${{ steps.generate_number.outputs.random_number }}@${{ vars.WEB_HOST }}/deploy.php


