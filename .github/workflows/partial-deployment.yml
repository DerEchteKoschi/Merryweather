name: deployment (partial)
run-name: Deploy to ${{ vars.WEB_HOST }} by @${{ github.actor }}

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      cache-deploy:
        description: 'deploy the cache'
        required: true
        default: true

jobs:
  # This workflow contains a single job called "build"
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: prepare
        run: sudo apt install lftp
      - name: generate deployment key
        id: generate_number
        run: echo "random_number=$(($RANDOM))" >> $GITHUB_OUTPUT
      - name: checkout
        uses: actions/checkout@v3
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y%m%d_%T')" >> $GITHUB_OUTPUT
      - name: prepare .env
        run: |
          echo APP_ENV=prod >> .env
          echo APP_DEBUG=false >> .env
          echo APP_SECRET=${{ secrets.APP }} >> .env
          echo DATABASE_URL="mysql://${{ vars.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ vars.DB_HOST }}:3306/${{ vars.DB_NAME }}?serverVersion=mariadb-10.8.3&charset=utf8mb4" >> .env
          echo APP_VERSION=$RELEASE_NAME >> .env
          echo MERCURE_URL=https://www.gnewikow.net/.well-known/mercure >> .env
          echo MERCURE_PUBLIC_URL=https://www.gnewikow.net/.well-known/mercure >> .env
          echo MERCURE_JWT_SECRET="${{ secrets.APP }}" >> .env
        env:
          RELEASE_NAME: ${{ github.ref_name }}-${{ steps.date.outputs.date }}
      - name: run composer install
        uses: php-actions/composer@v6
      - name: dump-env
        uses: php-actions/composer@v6
        with:
          command: symfony:dump-env prod
      - run: echo '<?php return "${{ steps.generate_number.outputs.random_number }}"; ' > ./public/ci.php
      - name: prepare files to deploy
        run: |
          mkdir deploy
          sudo mv var deploy/
      - name: clear cache
        continue-on-error: true
        run: lftp -e "rm -r var/cache/; exit" -u ${{ vars.DEPLOYMENT_USER }},${{ secrets.DEPLOYMENT_PASSWORD }} ${{ vars.DEPLOYMENT_HOST }}
      - name: copy files to target
        run: cd deploy;lftp -e "mirror -R --parallel=20 . .; exit" -u ${{ vars.DEPLOYMENT_USER }},${{ secrets.DEPLOYMENT_PASSWORD }} ${{ vars.DEPLOYMENT_HOST }}


